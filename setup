
path_number_gen_kafka="$HOME/IdeaProjects/kafka-microservices/number-gen-kafka"
path_number_gen_kafka_2="$HOME/IdeaProjects/kafka-microservices/number-gen-kafka-2"
path_number_merger_kafka_streams="$HOME/IdeaProjects/kafka-microservices/number-merger-kafka-streams"

services=(
	$path_number_gen_kafka
	$path_number_gen_kafka_2
	$path_number_merger_kafka_streams)

# Check out Repos
git clone git@github.com:melsicon/number-gen-kafka.git $path_number_gen_kafka
git clone git@github.com:melsicon/number-gen-kafka-2.git $path_number_gen_kafka_2 
git clone git@github.com:melsicon/number-merger-kafka-streams.git $path_number_merger_kafka_streams

source $HOME/.gradle/gradle.properties
dockerHubUsername="$dockerHubUser"

# Build images & push to DockerHub
for i in "${services[@]}"; do
  cd "$i"
  echo "Here we are: $PWD"
  gradle wrapper
  ./gradlew clean build jib
  sed -i -e 's/{{DockerHubUserName}}/'$dockerHubUsername'/g' k8s.yml
done


# Start Zookeeper & Kafka Broker in Docker
cd $HOME/IdeaProjects/kafka-microservices
docker-compose up -d

# Start Kubernetes Pods
for i in "${services[@]}"; do
  cd "$i"
  kubectl apply -f k8s.yml -n dev
done

# Open Terminal Consumers for topic "random-number-1-v1" to see what happens
osascript -e 'tell app "Terminal"
   do script "kafka-console-consumer --bootstrap-server localhost:9092 --topic random-number-1-v1 --property key=value --property print.key=true --property key.separator=':' "
end tell'

# Open Terminal Consumers for topic "random-number-2-v1" to see what happens
osascript -e 'tell app "Terminal"
   do script "kafka-console-consumer --bootstrap-server localhost:9092 --topic random-number-2-v1 --property key=value --property print.key=true --property key.separator=':' "
end tell'

# Open Terminal Consumers for topic "merged-topic-v1" to see what happens
osascript -e 'tell app "Terminal"
   do script "kafka-console-consumer --bootstrap-server localhost:9092 --topic merged-topic-v1 --property key=value --property print.key=true --property key.separator=':' "
end tell'

echo "You are all set. Check terminal windows to see the kafka consumers ..."
